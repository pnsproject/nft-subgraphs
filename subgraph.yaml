specVersion: 0.0.4
description: >-
  A secure & decentralized way to address resources on and off the blockchain
  using simple, human-readable names. Access domains and transfer history.
repository: "https://github.com/ensdomains/ens-subgraph"
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: PNS
    network: moonbeam
    source:
      address: '0x7d5F0398549C9fDEa03BbDde388361827cb376D5'
      abi: PNS
      startBlock: 895456
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/pns.ts
      entities:
        - Domain
        - Account
        - Resolver
      abis:
        - name: PNS
          file: ./abis/PNS.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: Approval(indexed address,indexed address,indexed uint256)
          handler: handleApproval
        - event: ApprovalForAll(indexed address,indexed address,bool)
          handler: handleApprovalForAll
        - event: NewResolver(uint256,address)
          handler: handleNewResolver
        - event: NewSubdomain(address,uint256,uint256,string)
          handler: handleNewSubdomain
        - event: Set(indexed uint256,indexed uint256,string)
          handler: handleSet     
        - event: SetName(indexed address,indexed uint256)
          handler: handleSetName
        - event: SetNftName(indexed address,indexed uint256,indexed uint256)
          handler: handleSetNftName

  - kind: ethereum/contract
    name: Controller
    network: moonbeam
    source:
      address: '0x2dF0fC48837e69D26eFA50fD3baE86977903B697'
      abi: Controller
      startBlock: 1308426
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/controller.ts
      entities:
        - Domain
        - Account
        - Registration
        - PriceChanged
      abis:
        - name: Controller
          file: ./abis/Controller.json
      eventHandlers:
        - event: CapacityUpdated(uint256,uint256)
          handler: handleCapacityUpdated
        - event: NameRegistered(address,uint256,uint256,uint256,string)
          handler: handleNameRegistered
        - event: NameRenewed(uint256,uint256,uint256,string)
          handler: handleNameRenewed
        - event: PriceChanged(uint256[],uint256[])
          handler: handlePriceChanged
      callHandlers:
        - function: setMetadataBatch(uint256[],(uint256,uint64,uint64,uint64)[])
          handler: setMetadataBatchHandle

